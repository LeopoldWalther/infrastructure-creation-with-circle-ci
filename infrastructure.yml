Description: >
    Leopold Walther:
    This template deploys everything necessary to test Ansible scripts. 
    A VPC with a public subnet, Internet Gateway, default 
    route on the public subnet and NAT Gateway. 

Parameters:

    EnvironmentName:
        Description: Environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnetCIDR:
        Description: IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24

    KeyPairName:
        Description: Keypair for EC2 machine SSH access
        Type: AWS::EC2::KeyPair::KeyName
        Default: UdacityKeyPair

Resources:

    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName
            
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    PublicSubnet: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnetCIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    NatGatewayEIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGatewayEIP.AllocationId
            SubnetId: !Ref PublicSubnet

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet

    EC2SecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow Jump Host to SSH to WebServers
            VpcId: !Ref VPC
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 3000
              ToPort: 3000
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    UbuntuMachine:
        Type: AWS::EC2::Instance
        DependsOn:
        - EC2SecGroup
        Properties:
            KeyName: !Ref KeyPairName
            ImageId: ami-007855ac798b5175e
            InstanceType: t2.micro
            NetworkInterfaces:
            - AssociatePublicIpAddress: true
              DeleteOnTermination: true
              Description: ENI for Ubuntu Machine
              DeviceIndex: '0'
              GroupSet: 
              - Ref: "EC2SecGroup"
              SubnetId: !Ref PublicSubnet
            Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} Ubuntu Machine

Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
            Name: !Sub ${EnvironmentName}-PUB-RT

    PublicSubnet:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet
        Export:
            Name: !Sub ${EnvironmentName}-PUB1-SN

    UbuntuMachinePublicIp:
        Description: Ubuntu Machine Public IP
        Value: !GetAtt UbuntuMachine.PublicIp
        Export:
            Name: !Sub "${EnvironmentName}-UbuntuMachinePublicIp"